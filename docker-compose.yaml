services:
  ingestion:
    image: samdataiken/ingestion-service:dev
    build:
      context: .
      dockerfile: src/ingestion/Dockerfile
    volumes:
      - ./config:/app/config
      - ./data/ingestion:/app/data/ingestion
      - ./data/raw:/app/data/raw

  preprocessing:
    image: samdataiken/preprocessing-service:dev
    build:
      context: .
      dockerfile: src/preprocessing/Dockerfile
    volumes:
      - ./config:/app/config
      - ./data/raw:/app/data/raw
      - ./data/processed:/app/data/processed

  training:
    image: samdataiken/training-service:dev
    build:
      context: .
      dockerfile: src/training/Dockerfile
    env_file:
      - .env
    volumes:
      - ./config:/app/config
      - ./data/processed:/app/data/processed
      - ./models:/app/models

  evaluation:
    image: samdataiken/evaluation-service:dev
    build:
      context: .
      dockerfile: src/evaluation/Dockerfile
    env_file:
      - .env
    volumes:
      - ./config:/app/config
      - ./data/processed:/app/data/processed
      - ./models:/app/models
      - ./evaluation:/app/evaluation

  inference:
    image: samdataiken/inference-service:dev
    build:
      context: .
      dockerfile: src/inference/Dockerfile
    env_file:
      - .env
    ports:
      - "8080:8080"
    volumes:
      - ./config:/app/config
      - ./data/processed:/app/data/processed


  frontend:
    image: samdataiken/frontend-service:dev
    build:
      context: .
      dockerfile: src/frontend/Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./config:/app/config
      - ./src/frontend/static:/app/static
      - ./src/frontend/templates:/app/templates

  postgres:
    image: postgres:13
    restart: always
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres_db:/var/lib/postgresql/data

  airflow-webserver:
    image: apache/airflow:2.8.1
    restart: always
    depends_on:
      - postgres
    ports:
      - "8082:8080"
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__FERNET_KEY: ${FERNET_KEY}
      AIRFLOW__WEBSERVER__DEFAULT_UI_TIMEZONE: Europe/Paris
      AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: "true"
      AIRFLOW__CORE__LOAD_EXAMPLES: "false"
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
    command: >
      bash -c "
      airflow db upgrade &&
      airflow users create --username admin --password admin --firstname Sarah --lastname L --role Admin --email admin@example.com &&
      airflow webserver
      "

  airflow-scheduler:
    image: apache/airflow:2.8.1
    restart: always
    depends_on:
      - postgres
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__CORE__FERNET_KEY: ${FERNET_KEY}
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/plugins:/opt/airflow/plugins
    command: >
      bash -c "
      airflow db upgrade &&
      airflow scheduler
      "

volumes:
  postgres_db:
